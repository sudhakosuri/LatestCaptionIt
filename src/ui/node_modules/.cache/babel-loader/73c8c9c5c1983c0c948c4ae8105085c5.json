{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14108\\\\Desktop\\\\UMBC Fall 2020\\\\Service Oriented Computing\\\\Project\\\\captionit\\\\src\\\\ui\\\\src\\\\Components\\\\imageUpload.component.js\";\nimport React, { Component } from \"react\";\nimport Result from \"./result.component\";\nimport ImageUploader from 'react-images-upload';\nexport default class Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      url: '',\n      error: false,\n      showResults: false,\n      data: ''\n    };\n  }\n\n  urlChanged(event) {\n    this.setState({\n      file: this.state.file,\n      url: event.target.value,\n      error: this.state.error,\n      showResults: this.state.showResults,\n      data: this.state.data\n    });\n  }\n\n  fileChangedHandler(event) {\n    console.log(event.target.files);\n    this.setState({\n      file: event.target.files[0],\n      url: this.state.url,\n      error: this.state.error,\n      showResults: this.state.showResults,\n      data: this.state.data\n    });\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  uploadHandler() {\n    let dt = '';\n\n    if ((this.state.url == null || this.state.url == '') && (this.state.file == null || this.state.file == '')) {\n      this.setState({\n        file: this.state.file,\n        url: this.state.url,\n        error: true,\n        showResults: this.state.showResults,\n        data: this.state.data\n      });\n    } else {\n      /*const uid = this.props.userid.userid.location.state.userid\r\n        const this_real = this\r\n          if (this.state.url != '' && this.state.url != null)\r\n      {\r\n            let img = new Image();\r\n          img.crossOrigin = 'Anonymous';\r\n          img.onload = function(){\r\n              var canvas = document.createElement('CANVAS'),\r\n              ctx = canvas.getContext('2d'), dataURL;\r\n              canvas.height = img.height;\r\n              canvas.width = img.width;\r\n              ctx.drawImage(img, 0, 0);\r\n              dataURL = canvas.toDataURL(\"image/jpg\");\r\n                const requestOptions = {\r\n                  method: 'POST',\r\n                  headers: { 'Access-Control-Request-Method': 'POST'\r\n                  , 'Access-Control-Request-Headers': '*', 'x-auth-token': 'auth'},\r\n                  body: JSON.stringify({ \r\n                      'id': uid,\r\n                      'image': dataURL.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n                    })\r\n              };\r\n                fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n              .then(function(response) {\r\n                  \r\n      \r\n                  // check for error response\r\n                  if (!response.ok) {\r\n                      // get error message from body or default to response statusText\r\n                      const error = \"There was some problem in the request. Please try again.\"\r\n                      return Promise.reject(error);\r\n                  }\r\n                  return response.json()\r\n              })\r\n              .then(function (data) {\r\n      \r\n                  \r\n                  if (data.statusCode != 200) {\r\n                      // get error message from body or default to response statusText\r\n                      const error = (JSON.parse(data.body)).message\r\n                      return Promise.reject(error);\r\n                  }\r\n                    dt = dataURL.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n                    \r\n                  this_real.setState({file: this_real.state.file, url:this_real.state.url, error:false, showResults:true, data: (JSON.parse(data.body)).message})\r\n          \r\n                  \r\n      \r\n              })\r\n              .catch(function(error) {\r\n                  console.error('There was an error!', error);\r\n                  alert(error)\r\n              });\r\n              \r\n          };\r\n          img.src = this.state.url\r\n            \r\n      }\r\n      else {\r\n          this.getBase64(this.state.file, (result) => {\r\n               \r\n              const requestOptions = {\r\n                  method: 'POST',\r\n                  headers: { 'Access-Control-Request-Method': 'POST'\r\n                  , 'Access-Control-Request-Headers': '*', 'x-auth-token': 'auth'},\r\n                  body: JSON.stringify({ \r\n                      'id': uid,\r\n                      'image': result.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n                    })\r\n              };\r\n      \r\n              fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n              .then(response => {\r\n                  \r\n                  \r\n                  if (!response.ok) {\r\n                      // get error message from body or default to response statusText\r\n                      const error = \"There was some problem in the request. Please try again.\"\r\n                      return Promise.reject(error);\r\n                  }\r\n                      return Promise.resolve(response.json())\r\n              })\r\n              .then(data => {\r\n      \r\n                  if (data.statusCode != 200) {\r\n                      // get error message from body or default to response statusText\r\n                      const error = (JSON.parse(data.body)).message\r\n                      return Promise.reject(error);\r\n                  }\r\n                \r\n                  this_real.setState({file: this_real.state.file, url:this_real.state.url, error:false, showResults:true, data: (JSON.parse(data.body)).message})\r\n                            \r\n      \r\n              })\r\n              .catch(error => {\r\n                  console.error('There was an error!', error);\r\n                  alert(error)\r\n              });\r\n                     \r\n                    });\r\n      }\r\n      */\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"create-course-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      id: \"url_id\",\n      class: \"form-control\",\n      placeholder: \"Enter URL\",\n      onChange: this.urlChanged.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 32\n      }\n    }), \"OR\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"files\",\n      accept: \"image/*\",\n      class: \"form-control\",\n      placeholder: \"Image\",\n      onChange: this.fileChangedHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 24\n      }\n    }), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 63\n      }\n    }, \"Should provide URL or upload an image\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      onClick: this.uploadHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"Get caption\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, this.state.showResults && /*#__PURE__*/React.createElement(Result, {\n      file: this.state.file,\n      data: this.state.data,\n      url: this.state.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 48\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/14108/Desktop/UMBC Fall 2020/Service Oriented Computing/Project/captionit/src/ui/src/Components/imageUpload.component.js"],"names":["React","Component","Result","ImageUploader","Upload","constructor","props","state","file","url","error","showResults","data","urlChanged","event","setState","target","value","fileChangedHandler","console","log","files","getBase64","cb","reader","FileReader","readAsDataURL","onload","result","onerror","uploadHandler","dt","render","bind","float","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Result from \"./result.component\";\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n\r\n\r\nexport default class Upload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {file: '', url: '', error:false, showResults:false, data:''};\r\n      }\r\n\r\n\r\n    \r\n\r\n    urlChanged(event){\r\n\r\n        this.setState({file: this.state.file, url:event.target.value, error:this.state.error, showResults:this.state.showResults, data: this.state.data})\r\n        \r\n    }\r\n\r\n    fileChangedHandler(event){\r\n\r\n        console.log(event.target.files)\r\n        this.setState({file: event.target.files[0], url:this.state.url, error:this.state.error, showResults:this.state.showResults, data: this.state.data})\r\n      \r\n    }\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n      \r\n    uploadHandler(){\r\n\r\n        let dt = ''\r\n\r\n        if ((this.state.url == null || this.state.url == '') && (this.state.file == null || this.state.file == '')) {\r\n            this.setState({file: this.state.file, url:this.state.url, error:true, showResults:this.state.showResults, data: this.state.data})\r\n        }\r\n        else {\r\n\r\n\r\n            /*const uid = this.props.userid.userid.location.state.userid\r\n\r\n            const this_real = this\r\n\r\n\r\n            if (this.state.url != '' && this.state.url != null)\r\n            {\r\n\r\n                let img = new Image();\r\n                img.crossOrigin = 'Anonymous';\r\n                img.onload = function(){\r\n                    var canvas = document.createElement('CANVAS'),\r\n                    ctx = canvas.getContext('2d'), dataURL;\r\n                    canvas.height = img.height;\r\n                    canvas.width = img.width;\r\n                    ctx.drawImage(img, 0, 0);\r\n                    dataURL = canvas.toDataURL(\"image/jpg\");\r\n\r\n                    const requestOptions = {\r\n                        method: 'POST',\r\n                        headers: { 'Access-Control-Request-Method': 'POST'\r\n                        , 'Access-Control-Request-Headers': '*', 'x-auth-token': 'auth'},\r\n                        body: JSON.stringify({ \r\n                            'id': uid,\r\n                            'image': dataURL.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n                          })\r\n                    };\r\n\r\n                    fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n                    .then(function(response) {\r\n                        \r\n            \r\n                        // check for error response\r\n                        if (!response.ok) {\r\n                            // get error message from body or default to response statusText\r\n                            const error = \"There was some problem in the request. Please try again.\"\r\n                            return Promise.reject(error);\r\n                        }\r\n                        return response.json()\r\n                    })\r\n                    .then(function (data) {\r\n            \r\n                        \r\n                        if (data.statusCode != 200) {\r\n                            // get error message from body or default to response statusText\r\n                            const error = (JSON.parse(data.body)).message\r\n                            return Promise.reject(error);\r\n                        }\r\n\r\n                        dt = dataURL.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n\r\n                        \r\n                        this_real.setState({file: this_real.state.file, url:this_real.state.url, error:false, showResults:true, data: (JSON.parse(data.body)).message})\r\n                \r\n                        \r\n            \r\n                    })\r\n                    .catch(function(error) {\r\n                        console.error('There was an error!', error);\r\n                        alert(error)\r\n                    });\r\n                    \r\n                };\r\n                img.src = this.state.url\r\n\r\n                \r\n            }\r\n            else {\r\n                this.getBase64(this.state.file, (result) => {\r\n\r\n                   \r\n                    const requestOptions = {\r\n                        method: 'POST',\r\n                        headers: { 'Access-Control-Request-Method': 'POST'\r\n                        , 'Access-Control-Request-Headers': '*', 'x-auth-token': 'auth'},\r\n                        body: JSON.stringify({ \r\n                            'id': uid,\r\n                            'image': result.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\")\r\n                          })\r\n                    };\r\n            \r\n                    fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n                    .then(response => {\r\n                        \r\n                        \r\n                        if (!response.ok) {\r\n                            // get error message from body or default to response statusText\r\n                            const error = \"There was some problem in the request. Please try again.\"\r\n                            return Promise.reject(error);\r\n                        }\r\n\r\n\r\n                        return Promise.resolve(response.json())\r\n                    })\r\n                    .then(data => {\r\n            \r\n                        if (data.statusCode != 200) {\r\n                            // get error message from body or default to response statusText\r\n                            const error = (JSON.parse(data.body)).message\r\n                            return Promise.reject(error);\r\n                        }\r\n\r\n                    \r\n                        this_real.setState({file: this_real.state.file, url:this_real.state.url, error:false, showResults:true, data: (JSON.parse(data.body)).message})\r\n        \r\n                        \r\n            \r\n                    })\r\n                    .catch(error => {\r\n                        console.error('There was an error!', error);\r\n                        alert(error)\r\n                    });\r\n        \r\n                 \r\n        \r\n                });\r\n            }\r\n\r\n*/\r\n               \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        \r\n\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-3\">\r\n                    <form id=\"create-course-form\">\r\n                        <br/>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"url\" id=\"url_id\" class=\"form-control\"  placeholder=\"Enter URL\" onChange={this.urlChanged.bind(this)}/>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div>\r\n                        <label><br/>OR</label></div>\r\n                        <br/>\r\n                        <div class=\"form-group\">\r\n                            \r\n\r\n                       <input type=\"file\" id=\"files\" accept=\"image/*\" class=\"form-control\"  placeholder=\"Image\" onChange={this.fileChangedHandler.bind(this)}/>\r\n                    \r\n            {this.state.error && <div  style={{float:'left'}}><p style={{color: 'red'}}>Should provide URL or upload an image</p></div>}\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        \r\n                        <button type=\"button\" class=\"btn btn-primary\" onClick={this.uploadHandler.bind(this)}>Get caption</button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        \r\n                    </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-9\">\r\n                    \r\n                    {this.state.showResults && <Result file={this.state.file} data={this.state.data} url={this.state.url}></Result>}</div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n        )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}