{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14108\\\\Desktop\\\\UMBC Fall 2020\\\\Service Oriented Computing\\\\Project\\\\captionit\\\\src\\\\ui\\\\src\\\\Components\\\\usage.component.js\";\nimport React, { Component } from \"react\";\nimport { PieChart } from 'react-minimal-pie-chart';\nexport default class Usage extends Component {\n  comp() {\n    userid = this.props.userid;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Access-Control-Request-Method': 'POST',\n        'Access-Control-Request-Headers': '*'\n      },\n      body: JSON.stringify({\n        'email': \"hello\",\n        'password': \"jsk\"\n      })\n    };\n    uri_link = 'https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/users/' + userid;\n    fetch(uri_link, requestOptions).then(response => {\n      const data = response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response statusText\n        const error = response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        isLoggedIn: true,\n        userName: this.state.userName,\n        password: this.state.password,\n        erroruserName: this.state.erroruserName,\n        errorPassword: this.state.errorPassword\n      });\n    }).catch(error => {\n      console.error('There was an error!', error);\n      alert('Invalid credentials ! Please try again.');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Subscription type: \"), \"\\xA0\\xA0\\xA0Basic\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Subscription Usage: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      data: [{\n        title: '100%',\n        value: 10,\n        percentage: 100,\n        color: '#006600'\n      }],\n      animate: true,\n      animationDuration: 500,\n      animationEasing: \"ease-out\",\n      label: data => data.dataEntry.title,\n      labelStyle: {\n        fontSize: \"8px\",\n        fontColor: \"FFFFFA\",\n        fontWeight: \"800\"\n      },\n      lineWidth: 100,\n      reveal: 100,\n      radius: 35,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/14108/Desktop/UMBC Fall 2020/Service Oriented Computing/Project/captionit/src/ui/src/Components/usage.component.js"],"names":["React","Component","PieChart","Usage","comp","userid","props","requestOptions","method","headers","body","JSON","stringify","uri_link","fetch","then","response","data","json","ok","error","statusText","Promise","reject","setState","isLoggedIn","userName","state","password","erroruserName","errorPassword","catch","console","alert","render","title","value","percentage","color","dataEntry","fontSize","fontColor","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n    \r\n\r\nexport default class Usage extends Component {\r\n\r\n\r\n    comp() {\r\n\r\n        userid = this.props.userid\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Access-Control-Request-Method': 'POST'\r\n            , 'Access-Control-Request-Headers': '*'},\r\n            body: JSON.stringify({ \r\n                'email': \"hello\",\r\n                'password': \"jsk\"\r\n              })\r\n        };\r\n        uri_link = 'https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/users/'+userid\r\n        fetch(uri_link, requestOptions)\r\n        .then(response => {\r\n            const data = response.json();\r\n\r\n            // check for error response\r\n            if (!response.ok) {\r\n                // get error message from body or default to response statusText\r\n                const error = response.statusText\r\n                return Promise.reject(error);\r\n            }\r\n\r\n            this.setState({isLoggedIn: true, userName: this.state.userName, password: this.state.password, erroruserName: this.state.erroruserName, errorPassword: this.state.errorPassword})\r\n        })\r\n        .catch(error => {\r\n            console.error('There was an error!', error);\r\n            alert('Invalid credentials ! Please try again.')\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row\">\r\n                        <span>Subscription type: </span>&nbsp;&nbsp;&nbsp;Basic\r\n                        </div>\r\n                        &nbsp;\r\n                        <div className=\"row\">\r\n                        <span>Subscription Usage: </span><span>\r\n                            \r\n                            <PieChart\r\n                                data={[\r\n                                    { title: '100%', value: 10, percentage: 100, color: '#006600' }\r\n                                ]}  animate\r\n                                animationDuration={500}\r\n                                animationEasing=\"ease-out\" label={(data) => data.dataEntry.title} labelStyle={{\r\n                                    fontSize: \"8px\",\r\n                                    fontColor: \"FFFFFA\",\r\n                                    fontWeight: \"800\",\r\n                                  }} lineWidth={100} reveal={100} radius={35}\r\n                            /></span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}