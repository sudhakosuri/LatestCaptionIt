{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14108\\\\Desktop\\\\UMBC Fall 2020\\\\Service Oriented Computing\\\\Project\\\\captionit\\\\src\\\\ui\\\\src\\\\Components\\\\imageUpload.component.js\";\nimport React, { Component } from \"react\";\nimport Result from \"./result.component\";\nimport ImageUploader from 'react-images-upload';\nexport default class Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      url: null,\n      error: false,\n      showResults: false,\n      base64str: '',\n      data: ''\n    };\n  }\n\n  urlChanged(event) {\n    this.setState({\n      file: this.state.file,\n      url: event.target.value,\n      error: this.state.error,\n      showResults: this.state.showResults,\n      base64str: this.state.base64str,\n      data: this.state.data\n    });\n  }\n\n  fileChangedHandler(picture) {\n    this.setState({\n      file: picture,\n      url: this.state.url,\n      error: this.state.error,\n      showResults: this.state.showResults,\n      base64str: this.state.base64str,\n      data: this.state.data\n    });\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  uploadHandler() {\n    if ((this.state.url == null || this.state.url == '') && (this.state.file == null || this.state.file == '')) {\n      this.setState({\n        file: this.state.file,\n        url: this.state.url,\n        error: true,\n        showResults: this.state.showResults,\n        base64str: this.state.base64str,\n        data: this.state.data\n      });\n    } else {\n      console.log(this.state.file);\n      const uid = this.props.userid.userid.location.state.userid;\n      /*this.getBase64(this.state.url, (result) => {\r\n      \r\n          const requestOptions = {\r\n              method: 'POST',\r\n              headers: { 'Access-Control-Request-Method': 'POST'\r\n              , 'Access-Control-Request-Headers': '*'},\r\n              body: JSON.stringify({ \r\n                  'id': uid,\r\n                  'image': result\r\n                })\r\n          };\r\n                fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n          .then(response => {\r\n              \r\n                    // check for error response\r\n              if (!response.ok) {\r\n                  // get error message from body or default to response statusText\r\n                  const error = \"There was some problem in the request. Please try again.\"\r\n                  return Promise.reject(error);\r\n              }\r\n              return response.json()\r\n          })\r\n          .then(data => {\r\n                    console.log(data)\r\n              if (data.statusCode != 200) {\r\n                  // get error message from body or default to response statusText\r\n                  const error = (JSON.parse(data.body)).message\r\n                  return Promise.reject(error);\r\n              }\r\n                this.setState({file: this.state.file, url:this.state.url, error:false, showResults:true, base64str: this.state.base64str, data: (JSON.parse(data.body)).message})\r\n              \r\n                })\r\n          .catch(error => {\r\n              console.error('There was an error!', error);\r\n              alert(error)\r\n          });\r\n         \r\n        });*/\n    }\n  }\n\n  reset() {\n    document.getElementById(\"imgfile\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"create-course-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      class: \"form-control\",\n      placeholder: \"Enter URL\",\n      onChange: this.urlChanged.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }\n    }), \"OR\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ImageUploader, {\n      id: \"imgfile\",\n      withIcon: true,\n      buttonText: \"Browse image\",\n      onChange: this.fileChangedHandler.bind(this),\n      imgExtension: ['.jpg'],\n      maxFileSize: 5242880,\n      class: \"form-control\",\n      placeholder: \"Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"C:\\\\Downloads\\\\TestEmoji.jpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 79\n      }\n    }, \"Should provide URL or upload an image\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      onClick: this.uploadHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Get caption\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      onClick: this.reset.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Reset\"))), this.state.showResults && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Result, {\n      file: this.state.file,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 74\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/14108/Desktop/UMBC Fall 2020/Service Oriented Computing/Project/captionit/src/ui/src/Components/imageUpload.component.js"],"names":["React","Component","Result","ImageUploader","Upload","constructor","props","state","file","url","error","showResults","base64str","data","urlChanged","event","setState","target","value","fileChangedHandler","picture","getBase64","cb","reader","FileReader","readAsDataURL","onload","result","onerror","console","log","uploadHandler","uid","userid","location","reset","document","getElementById","render","bind","float","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Result from \"./result.component\";\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n\r\n\r\nexport default class Upload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {file: null, url: null, error:false, showResults:false, base64str:'', data:''};\r\n      }\r\n\r\n\r\n    \r\n\r\n    urlChanged(event){\r\n\r\n        this.setState({file: this.state.file, url:event.target.value, error:this.state.error, showResults:this.state.showResults, base64str:this.state.base64str, data: this.state.data})\r\n        \r\n    }\r\n\r\n    fileChangedHandler(picture){\r\n\r\n        this.setState({file: picture, url:this.state.url, error:this.state.error, showResults:this.state.showResults, base64str:this.state.base64str, data: this.state.data})\r\n      \r\n    }\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n      \r\n    uploadHandler(){\r\n\r\n        if ((this.state.url == null || this.state.url == '') && (this.state.file == null || this.state.file == '')) {\r\n            this.setState({file: this.state.file, url:this.state.url, error:true, showResults:this.state.showResults, base64str: this.state.base64str , data: this.state.data})\r\n        }\r\n        else {\r\n\r\n            console.log(this.state.file)\r\n\r\n            const uid = this.props.userid.userid.location.state.userid\r\n\r\n            \r\n           \r\n        /*this.getBase64(this.state.url, (result) => {\r\n        \r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Access-Control-Request-Method': 'POST'\r\n                , 'Access-Control-Request-Headers': '*'},\r\n                body: JSON.stringify({ \r\n                    'id': uid,\r\n                    'image': result\r\n                  })\r\n            };\r\n    \r\n            fetch('https://86wu00bura.execute-api.us-east-1.amazonaws.com/v1/caption', requestOptions)\r\n            .then(response => {\r\n                \r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response statusText\r\n                    const error = \"There was some problem in the request. Please try again.\"\r\n                    return Promise.reject(error);\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n    \r\n                console.log(data)\r\n                if (data.statusCode != 200) {\r\n                    // get error message from body or default to response statusText\r\n                    const error = (JSON.parse(data.body)).message\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                this.setState({file: this.state.file, url:this.state.url, error:false, showResults:true, base64str: this.state.base64str, data: (JSON.parse(data.body)).message})\r\n                \r\n    \r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n                alert(error)\r\n            });\r\n\r\n         \r\n\r\n        });*/\r\n\r\n            \r\n               \r\n        }\r\n    }\r\n\r\n    reset() {\r\n        document.getElementById(\"imgfile\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-8\">\r\n                    <form id=\"create-course-form\">\r\n                        <br/>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"url\" class=\"form-control\"  placeholder=\"Enter URL\" onChange={this.urlChanged.bind(this)}/>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div>\r\n                        <label><br/>OR</label></div>\r\n                        <br/>\r\n                        <div class=\"form-group\">\r\n                            \r\n                        <ImageUploader id=\"imgfile\"\r\n                withIcon={true}\r\n                buttonText='Browse image'\r\n                onChange={this.fileChangedHandler.bind(this)}\r\n                imgExtension={['.jpg']}\r\n                maxFileSize={5242880}\r\n                class=\"form-control\"  placeholder=\"Image\"\r\n            />\r\n            <img src=\"C:\\Downloads\\TestEmoji.jpeg\"/>\r\n                            {this.state.error && <div  style={{float:'left'}}><p style={{color: 'red'}}>Should provide URL or upload an image</p></div>}\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        \r\n                        <button type=\"button\" class=\"btn btn-primary\" onClick={this.uploadHandler.bind(this)}>Get caption</button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <button type=\"submit\" class=\"btn btn-primary\" onClick={this.reset.bind(this)}>Reset</button>\r\n                    </form>\r\n                    </div>\r\n                    {this.state.showResults && <div className=\"col-md-2\"><Result file={this.state.file} data={this.state.data}></Result></div>}\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}